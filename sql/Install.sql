/*
DROP DATABASE IF EXISTS TRN;
*/
/*DB_TRN
 */
/*CREATE DATABASE TRN;*/
 
 /*Seleccion de DB
 */
USE TRN;

/*TRN_USUARIOS
Descripción: Datos actuales de usuarios. 
*/
DROP TABLE IF EXISTS TRN_LKP_SLIDER;
DROP TABLE IF EXISTS TRN_B_NOTICIAS;
DROP TABLE IF EXISTS TRN_LKP_NOTICIAS;
DROP TABLE IF EXISTS TRN_B_SERVICIOS_CONTRATADOS;
DROP TABLE IF EXISTS TRN_B_ASIGNACION_ENTRENADORES;
DROP TABLE IF EXISTS TRN_LKP_PLANES_CONTRATABLES;
DROP TABLE IF EXISTS TRN_B_SEGUIMIENTOS;
DROP TABLE IF EXISTS TRN_LKP_OBJETIVOS;
DROP TABLE IF EXISTS TRN_WEB_ACCESOS;
DROP TABLE IF EXISTS TRN_LKP_ROLES_SEGURIDAD;
DROP TABLE IF EXISTS TRN_LKP_USUARIOS;
DROP TABLE IF EXISTS TRN_LKP_TIPO_ALIMENTOS;
DROP TABLE IF EXISTS TRN_LKP_DETALLE_ALIMENTOS;
DROP TABLE IF EXISTS TRN_LKP_ESTADO_ALIMENTOS;
DROP TABLE IF EXISTS TRN_LKP_ALIMENTOS;
CREATE TABLE TRN_LKP_USUARIOS (
ID_USER					INT  				NOT NULL AUTO_INCREMENT PRIMARY KEY,
NOMBRE 					VARCHAR(50) 		NOT NULL,
APELLIDOS 				VARCHAR(50) 		NOT NULL,
FECHA_DE_NACIMIENTO 	DATE 				NOT NULL,
EMAIL 					VARCHAR(50) 		NOT NULL UNIQUE,
PASSWORD				VARCHAR(50) 		NOT NULL,
DEPORTISTA 				TINYINT 			NOT NULL DEFAULT 0,
COACH					TINYINT				NOT NULL DEFAULT 0,
RESPONSABLE				INT					,
PESO					NUMERIC(4,1)		,
ALTURA					NUMERIC(3,0)		,
PERFIL  				INT					NOT NULL DEFAULT 1,
ACTIVO					TINYINT				NOT NULL DEFAULT 1,
FOREIGN KEY (RESPONSABLE) REFERENCES TRN_LKP_USUARIOS(ID_USER)
)ENGINE=INNODB;
INSERT INTO TRN_LKP_USUARIOS (NOMBRE,APELLIDOS,FECHA_DE_NACIMIENTO,EMAIL,PASSWORD,PERFIL,ALTURA,PESO)VALUES("ADMIN","ADMINIS",STR_TO_DATE("19/10/1990",'%d/%m/%Y'),"admin@trn.com",MD5("admin"),7,182,88.9);
INSERT INTO TRN_LKP_USUARIOS (NOMBRE,APELLIDOS,FECHA_DE_NACIMIENTO,EMAIL,PASSWORD,PERFIL,ALTURA,PESO)VALUES("Jose Francisco","López Gil",STR_TO_DATE("19/10/1990",'%d/%m/%Y'),"josefranciscolopezgil@gmail.com",MD5("trn2016"),5,198,95);
INSERT INTO TRN_LKP_USUARIOS (NOMBRE,APELLIDOS,FECHA_DE_NACIMIENTO,EMAIL,PASSWORD,PERFIL)VALUES("Prueba1","Prueba1",STR_TO_DATE("19/10/1990",'%d/%m/%Y'),"Prueba1@trn.com",MD5("trn2016"),1);
INSERT INTO TRN_LKP_USUARIOS (NOMBRE,APELLIDOS,FECHA_DE_NACIMIENTO,EMAIL,PASSWORD,PERFIL)VALUES("Asistente","Asistente",STR_TO_DATE("19/10/1990",'%d/%m/%Y'),"asistente@trn.com",MD5("asistente"),4);

/*TRN_LKP_ROLES_SEGURIDAD
Descripción: Tabla que almacena la configuración de los roles de seguridad.
*/
CREATE TABLE TRN_LKP_ROLES_SEGURIDAD(
NUM_ORDEN				INT					,
ID_PERFIL				INT					NOT NULL AUTO_INCREMENT PRIMARY KEY,
DESC_PERFIL 			VARCHAR(20) 		NOT NULL,
BACKEND 				TINYINT 			NOT NULL DEFAULT 0,
OBJETIVOS 				TINYINT 			NOT NULL DEFAULT 0,
SEGUIMIENTO 			TINYINT 			NOT NULL DEFAULT 0,
NOTICIAS				TINYINT				NOT NULL DEFAULT 0,
FRONT_CONFIG			TINYINT				NOT NULL DEFAULT 0,
RESET_DB				TINYINT				NOT NULL DEFAULT 0
)ENGINE=INNODB;
INSERT INTO TRN_LKP_ROLES_SEGURIDAD (NUM_ORDEN,DESC_PERFIL,BACKEND,OBJETIVOS,SEGUIMIENTO,NOTICIAS,FRONT_CONFIG,RESET_DB) VALUES (7,'Usuario',0,0,0,0,0,0);
INSERT INTO TRN_LKP_ROLES_SEGURIDAD (NUM_ORDEN,DESC_PERFIL,BACKEND,OBJETIVOS,SEGUIMIENTO,NOTICIAS,FRONT_CONFIG,RESET_DB) VALUES (6,'Soporte',0,0,0,1,0,0);
INSERT INTO TRN_LKP_ROLES_SEGURIDAD (NUM_ORDEN,DESC_PERFIL,BACKEND,OBJETIVOS,SEGUIMIENTO,NOTICIAS,FRONT_CONFIG,RESET_DB) VALUES (4,'Administrativo',1,0,0,1,1,0);
INSERT INTO TRN_LKP_ROLES_SEGURIDAD (NUM_ORDEN,DESC_PERFIL,BACKEND,OBJETIVOS,SEGUIMIENTO,NOTICIAS,FRONT_CONFIG,RESET_DB) VALUES (5,'Asistente',1,0,1,0,0,0);
INSERT INTO TRN_LKP_ROLES_SEGURIDAD (NUM_ORDEN,DESC_PERFIL,BACKEND,OBJETIVOS,SEGUIMIENTO,NOTICIAS,FRONT_CONFIG,RESET_DB) VALUES (3,'Coach',1,1,1,0,0,0);
INSERT INTO TRN_LKP_ROLES_SEGURIDAD (NUM_ORDEN,DESC_PERFIL,BACKEND,OBJETIVOS,SEGUIMIENTO,NOTICIAS,FRONT_CONFIG,RESET_DB) VALUES (2,'Administrador',1,1,1,1,1,0);
INSERT INTO TRN_LKP_ROLES_SEGURIDAD (NUM_ORDEN,DESC_PERFIL,BACKEND,OBJETIVOS,SEGUIMIENTO,NOTICIAS,FRONT_CONFIG,RESET_DB) VALUES (1,'MASTER',1,1,1,1,1,1);
/*Trigger de insercion*/


/* TRN_WEB_ACCESOS
Descripción: Tabla que almacena todos los accesos
*/
CREATE TABLE TRN_WEB_ACCESOS(
ID_ACCESO				INT					NOT NULL AUTO_INCREMENT PRIMARY KEY,
ID_USER					INT					NOT NULL,
FECHA_ACCESO			DATE				NOT NULL,
IP						VARCHAR(20)			NOT NULL,
WEB						TINYINT				NOT NULL DEFAULT 0,
APP						TINYINT				NOT NULL DEFAULT 0,
INDEX (ID_USER),
FOREIGN KEY (ID_USER) REFERENCES TRN_LKP_USUARIOS (ID_USER)
)ENGINE=INNODB;


/*TRN_B_OBJETIVOS
Descripción: Tabla que almacena los distintos objetivos de los usuarios. (De momento solo objetivos de peso, ¿Jerarquía de Objetivos?)
*/
CREATE TABLE TRN_LKP_OBJETIVOS(
ID_OBJETIVO				INT					NOT NULL AUTO_INCREMENT PRIMARY KEY,
ID_USUARIO				INT					NOT NULL,
FECHA_INICIO			DATE				NOT NULL,
PROGRESO				NUMERIC(3,1)    	NOT NULL,
PESO_OBJETIVO			NUMERIC(4,1)		NOT NULL,
PESO_INICIO				NUMERIC(4,1)		NOT NULL,
PESO_ACTUAL				NUMERIC(4,1)		NOT NULL,
DIAS_ENTRENO			VARCHAR(10)			NOT NULL DEFAULT '1010100',
PATOLOGIAS				VARCHAR(250)		,
ALIMENTOS_ND			VARCHAR(250)		,
ID_COACH				INT					,
OBJETIVO				VARCHAR(500)		NOT NULL,
FOREIGN KEY (ID_USUARIO) REFERENCES TRN_LKP_USUARIOS (ID_USER),
FOREIGN KEY (ID_COACH) REFERENCES TRN_LKP_USUARIOS (ID_USER)
)ENGINE=INNODB;

INSERT INTO TRN_LKP_OBJETIVOS (ID_USUARIO,FECHA_INICIO,PROGRESO,PESO_OBJETIVO,PESO_INICIO,PESO_ACTUAL,DIAS_ENTRENO,OBJETIVO) VALUES (1,STR_TO_DATE("26/09/2016",'%d/%m/%Y'),10.5,77.5,89.5,88.5,"MXD","Bajar % de grasa corporal a 8%.");

/*TRN_LKP_SEGUIMIENTOS
Descripción: Tabla que almacena el seguimiento de un objetivo asociado a un usuario.
*/
CREATE TABLE TRN_B_SEGUIMIENTOS(
ID_SEGUIMIENTO			INT 				NOT NULL AUTO_INCREMENT PRIMARY KEY,
ID_OBJETIVO				INT					NOT NULL,
PESO					NUMERIC(4,1)		NOT NULL,
FOTO_FRONTAL			VARCHAR(250)		,
FOTO_ESPALDA			VARCHAR(250)		,
FOTO_PERFIL				VARCHAR(250)		,
COMENTARIOS_USUARIO		VARCHAR(250)		,
COMENTARIOS_COACH		VARCHAR(250)		,
PROGRESO				NUMERIC(3,1)    	NOT NULL,
FECHA_SEGUIMIENTO		DATE				NOT NULL,
FOREIGN KEY (ID_OBJETIVO) REFERENCES TRN_LKP_OBJETIVOS (ID_OBJETIVO)
)ENGINE=INNODB;
/*
Objetivo 1 se inició el día 26/09/2016
INSERT INTO TRN_B_SEGUIMIENTOS (ID_OBJETIVO,PESO,COMENTARIOS,FECHA_SEGUIMIENTO)VALUES(1,);
*/

/*
* @brief Estructura de la tabla TRN_LKP_PLANES_CONTRATABLES
* @details 
*/
CREATE TABLE TRN_LKP_PLANES_CONTRATABLES(
ID_PLAN 				INT 				NOT NULL AUTO_INCREMENT PRIMARY KEY,
NOMBRE					VARCHAR(50)     	NOT NULL,
SEGUIMIENTO_SEM			INT					NOT NULL,
CHAT					TINYINT				NOT NULL,
ENTRENAMIENTO			TINYINT				NOT NULL DEFAULT 0,
NUTRICION				TINYINT				NOT NULL DEFAULT 0,
PRECIO					NUMERIC(5,2)		NOT NULL,
VISIBLE					TINYINT				NOT NULL DEFAULT 0
)ENGINE=INNODB;
INSERT INTO TRN_LKP_PLANES_CONTRATABLES (NOMBRE,SEGUIMIENTO_SEM,CHAT,ENTRENAMIENTO,NUTRICION,PRECIO,VISIBLE) VALUES("FIT",0,1,0,1,9.99,1);
INSERT INTO TRN_LKP_PLANES_CONTRATABLES (NOMBRE,SEGUIMIENTO_SEM,CHAT,ENTRENAMIENTO,NUTRICION,PRECIO,VISIBLE) VALUES("MUSCLE",0,1,1,0,9.99,1);
INSERT INTO TRN_LKP_PLANES_CONTRATABLES (NOMBRE,SEGUIMIENTO_SEM,CHAT,ENTRENAMIENTO,NUTRICION,PRECIO,VISIBLE) VALUES("1+1",0,1,1,1,19.99,1);
INSERT INTO TRN_LKP_PLANES_CONTRATABLES (NOMBRE,SEGUIMIENTO_SEM,CHAT,ENTRENAMIENTO,NUTRICION,PRECIO,VISIBLE) VALUES("FIT+",1,1,0,1,19.99,1);
INSERT INTO TRN_LKP_PLANES_CONTRATABLES (NOMBRE,SEGUIMIENTO_SEM,CHAT,ENTRENAMIENTO,NUTRICION,PRECIO,VISIBLE) VALUES("MUSCLE+",1,1,1,0,19.99,1);
INSERT INTO TRN_LKP_PLANES_CONTRATABLES (NOMBRE,SEGUIMIENTO_SEM,CHAT,ENTRENAMIENTO,NUTRICION,PRECIO,VISIBLE) VALUES("ADVANCED",1,1,1,1,35.00,1);
INSERT INTO TRN_LKP_PLANES_CONTRATABLES (NOMBRE,SEGUIMIENTO_SEM,CHAT,ENTRENAMIENTO,NUTRICION,PRECIO,VISIBLE) VALUES("PRO",3,1,1,1,75.00,1);
INSERT INTO TRN_LKP_PLANES_CONTRATABLES (NOMBRE,SEGUIMIENTO_SEM,CHAT,ENTRENAMIENTO,NUTRICION,PRECIO,VISIBLE) VALUES("PRO++",5,1,1,1,150,1);

/*TRN_B_SERVICIOS_CONTRATADOS
Descripción: Servicios Contratados por Clientes
*/
CREATE TABLE TRN_B_SERVICIOS_CONTRATADOS(
ID_CONTRATO				INT 				NOT NULL AUTO_INCREMENT PRIMARY KEY,
ID_PLAN					INT					NOT NULL,
ID_USER					INT					NOT NULL,
FECHA_INICIO_SERV		DATE				NOT NULL,
FECHA_FIN_SERV			DATE				NOT NULL,
RENOVACION_MEN			TINYINT				NOT NULL DEFAULT 0,
FOREIGN KEY (ID_USER) REFERENCES TRN_LKP_USUARIOS (ID_USER),
FOREIGN KEY (ID_PLAN) REFERENCES TRN_LKP_PLANES_CONTRATABLES (ID_PLAN)
);

/*TRN_B_ASIGNACION_ENTRENADORES
Descripción: Guarda el histórico de asignaciónes de entrenadores y Coach responsables
*/
CREATE TABLE TRN_B_ASIGNACION_ENTRENADORES(
ID_ASIGNACION			INT 				NOT NULL AUTO_INCREMENT PRIMARY KEY,
ID_CLIENTE				INT					NOT NULL,
ID_ASISTENTE			INT					NOT NULL,
ID_COACH				INT 				NOT NULL,
DESC_ASIGNACION			VARCHAR(30)			NOT NULL
);
/*Crear un trigger de insercción para comprobar que la fila que se va a insertar no es equivalente y asignar un descriptor*/
INSERT INTO TRN_B_ASIGNACION_ENTRENADORES(ID_CLIENTE,ID_ASISTENTE,ID_COACH,DESC_ASIGNACION) VALUES (3,4,2,"Asignación incial");


/*TRN_LKP_NOTICIAS
Descripción: Últimas noticias publicadas, visibles desde INDEX.
*/
CREATE TABLE TRN_LKP_NOTICIAS (
ID_NOTICIA				INT 				NOT NULL AUTO_INCREMENT PRIMARY KEY,
TITULO					VARCHAR(250)		NOT NULL,
DESCRIPCION				VARCHAR(250)		NOT NULL,
CUERPO					VARCHAR(2500)		NOT NULL,
PUBLICADOR  			INT					NOT NULL,
FECHA_NOTICIA			DATE				NOT NULL,
FOREIGN KEY (PUBLICADOR) REFERENCES TRN_LKP_USUARIOS (ID_USER)
);
/*Falta el trigger que pasa las noticias antiguas a la tablas TRN_B_NOTICIAS*/

/*TRN_B_NOTICIAS
Descripción: Últimas noticias publicadas, visibles desde INDEX.
*/
CREATE TABLE TRN_B_NOTICIAS(
ID_NOTICIA				INT 				NOT NULL PRIMARY KEY,
TITULO					VARCHAR(250)		NOT NULL,
DESCRIPCION				VARCHAR(250)		NOT NULL,
CUERPO					VARCHAR(2500)		NOT NULL,
ID_USER					INT					NOT NULL,
FECHA_NOTICIA           DATE				NOT NULL,
FOREIGN KEY (ID_USER) REFERENCES TRN_LKP_USUARIOS (ID_USER)
);

/*TRN_LKP_SLIDER
Nota: No consolidado
*/
CREATE TABLE TRN_LKP_SLIDER (
ID_SLIDE				INT 			NOT NULL AUTO_INCREMENT PRIMARY KEY,
ID_NAME_SLIDE           VARCHAR(30)		NOT NULL,
ID_NUM_POS				INT				NOT NULL,
DIRECCION				VARCHAR(250)	NOT NULL
);

INSERT INTO TRN_LKP_SLIDER (ID_NAME_SLIDE,ID_NUM_POS,DIRECCION)VALUES("slider1",1,"images/slider/slider1.jpg");
INSERT INTO TRN_LKP_SLIDER (ID_NAME_SLIDE,ID_NUM_POS,DIRECCION)VALUES("slider2",2,"images/slider/slider2.jpg");
INSERT INTO TRN_LKP_SLIDER (ID_NAME_SLIDE,ID_NUM_POS,DIRECCION)VALUES("slider3",3,"images/slider/slider3.jpg");
INSERT INTO TRN_LKP_SLIDER (ID_NAME_SLIDE,ID_NUM_POS,DIRECCION)VALUES("slider4",4,"images/slider/slider4.jpg");

/*
INSERT INTO TRN_LKP_SLIDER (ID_NAME_SLIDE,ID_NUM_POS,DIRECCION)VALUES("FRONT01",1,"");
INSERT INTO TRN_LKP_SLIDER (ID_NAME_SLIDE,ID_NUM_POS,DIRECCION)VALUES("FRONT01",2,"");
INSERT INTO TRN_LKP_SLIDER (ID_NAME_SLIDE,ID_NUM_POS,DIRECCION)VALUES("FRONT01",3,"");
*/
/*
TRN_LKP_TIPO_ALIMENTO
Descripción: Contiene la gerarquía de tipologías de alimentos
*/
CREATE TABLE TRN_LKP_TIPO_ALIMENTOS(
ID_TIPO_ALIMENTO		INT 			NOT NULL AUTO_INCREMENT PRIMARY KEY,
NIVEL_JERARQUIA			INT				NOT NULL,
DESC_TIPO_ALIMENTO		VARCHAR(30)		NOT NULL,
ID_PADRE				INT				,
FOREIGN KEY (ID_PADRE) REFERENCES TRN_LKP_TIPO_ALIMENTOS (ID_TIPO_ALIMENTO)
);
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO)VALUES(1,"Leche y Derivados"); 								/*1*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO)VALUES(1,"Huevos");											/*2*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO)VALUES(1,"Carnes");                                           /*3*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO)VALUES(1,"Pescados");                                         /*4*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO)VALUES(1,"Legumbres");                                        /*5*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO)VALUES(1,"Frutos Secos");                                     /*6*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO)VALUES(1,"Verduras");                                         /*7*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO)VALUES(1,"Frutas");                                           /*8*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO)VALUES(1,"Cereales");                                         /*9*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO)VALUES(1,"Azúcares y Derivados");                             /*10*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO)VALUES(1,"Aceites y Grasas");                                 /*11*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(2,"Leches",1);                                /*12*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(2,"Quesos",1);                                /*13*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(2,"Yogures",1);                               /*14*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(2,"Carne Roja",3);                            /*15*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(2,"Carne Blanca",3);                          /*16*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(2,"Pescado Blanco",4);                        /*17*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(2,"Pescado Azul",4);                          /*18*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(2,"Marisco",4);                               /*19*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(2,"Tubérculos",7);                            /*20*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(2,"Hortalizas",7);                            /*21*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(2,"Grasas Animales",11);                      /*22*/
INSERT INTO TRN_LKP_TIPO_ALIMENTOS(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(2,"Grasas Vegetales",11);                     /*23*/


/*
INSERT INTO TRN_LKP_TIPO_ALIMENTO(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(1,"Cereales",0);
INSERT INTO TRN_LKP_TIPO_ALIMENTO(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(1,"Tuberculos y Hortalizas",0);
INSERT INTO TRN_LKP_TIPO_ALIMENTO(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(1,"Frutos Frescos",0);
INSERT INTO TRN_LKP_TIPO_ALIMENTO(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(1,"Frutos Secos",0);
INSERT INTO TRN_LKP_TIPO_ALIMENTO(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(1,"Leche y Derivados",0);
INSERT INTO TRN_LKP_TIPO_ALIMENTO(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(1,"Huevos",0);
INSERT INTO TRN_LKP_TIPO_ALIMENTO(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(1,"Azúcares y dulces varios",0);
INSERT INTO TRN_LKP_TIPO_ALIMENTO(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(1,"Aceites y Grasas",0);
INSERT INTO TRN_LKP_TIPO_ALIMENTO(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(1,"Pescados",0);
INSERT INTO TRN_LKP_TIPO_ALIMENTO(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(1,"Carnes",0);
INSERT INTO TRN_LKP_TIPO_ALIMENTO(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(1,"Embutidos",0);
INSERT INTO TRN_LKP_TIPO_ALIMENTO(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(1,"Aves",0);
INSERT INTO TRN_LKP_TIPO_ALIMENTO(NIVEL_JERARQUIA,DESC_TIPO_ALIMENTO,ID_PADRE)VALUES(1,"Caza",0);
*/
/*
TRN_LKP_TIPO_ALIMENTO_I18N
Descripción: Contiene las traducciones de las tipologías.
*/

/*
TRN_LKP_DETALLE_ALIMENTOS
Descripción: Contiene las descripciones de los campos que se almacen en base de datos para usarlos de tooltip o similar
*/
CREATE TABLE TRN_LKP_DETALLE_ALIMENTOS(
ID_DETALLE_ALIMENTO		INT				NOT NULL AUTO_INCREMENT PRIMARY KEY,
NOMBRE_DETALLE			VARCHAR(30)		NOT NULL,
DESC_CORTA				VARCHAR(10)		NOT NULL,
DESCRIPCION				VARCHAR(200)	NOT NULL
);

/*TRN_LKP_ESTADO_ALIMENTOS
*/
CREATE TABLE TRN_LKP_ESTADO_ALIMENTOS(
ID_ESTADO_ALIMENTO		INT 			NOT NULL AUTO_INCREMENT PRIMARY  KEY,
DESC_ESTADO				VARCHAR(30)		NOT NULL
);


/*TRN_LKP_ESTADO_ALIMENTOS_I18N
*/
/*CREATE TABLE TRN_LKP_ESTADO_ALIMENTOS_I18N(
);*/

/*
TRN_LKP_ALIMENTOS
Descripción: Tabla que contiene los alimentos
*/
CREATE TABLE TRN_LKP_ALIMENTOS(
ID_ALIMENTO				INT				NOT NULL AUTO_INCREMENT PRIMARY KEY,
NOMBRE_ALIMENTO			VARCHAR(30)		NOT NULL,
ID_ESTADO				INT				NOT NULL,
ID_JERARQUIA			INT				NOT NULL,
KCAL					NUMERIC(9,3)	NOT NULL,
PROTEINAS				NUMERIC(9,3)	NOT NULL,
GRASAS					NUMERIC(9,3)	NOT NULL,
HIDRATOS_CARBONO		NUMERIC(9,3)	NOT NULL,
H2O						NUMERIC(9,3) 	NOT NULL,
NE						NUMERIC(9,3)	NOT NULL,
V_A						NUMERIC(9,3)	NOT NULL,
V_B1					NUMERIC(9,3)	NOT NULL,
V_B2					NUMERIC(9,3)	NOT NULL,
V_C						NUMERIC(9,3)	NOT NULL,
V_NIAC					NUMERIC(9,3)	NOT NULL,
MIN_NA					NUMERIC(9,3)	NOT NULL,
MIN_K					NUMERIC(9,3)	NOT NULL,
MIN_CA					NUMERIC(9,3)	NOT NULL,
MIN_MG					NUMERIC(9,3)	NOT NULL,
MIN_FE					NUMERIC(9,3)	NOT NULL,
MIN_CU					NUMERIC(9,3)	NOT NULL,
MIN_P					NUMERIC(9,3)	NOT NULL,
MIN_S					NUMERIC(9,3)	NOT NULL,
MIN_CL					NUMERIC(9,3)	NOT NULL,
AMIN_FEN				NUMERIC(9,3)	NOT NULL,
AMIN_ILEU				NUMERIC(9,3)	NOT NULL,
AMIN_LEU				NUMERIC(9,3)	NOT NULL,
AMIN_LIS				NUMERIC(9,3)	NOT NULL,
AMIN_MET				NUMERIC(9,3)	NOT NULL,
AMIN_TRE				NUMERIC(9,3)	NOT NULL,
AMIN_TRI				NUMERIC(9,3)	NOT NULL,
AMIN_VAL				NUMERIC(9,3)	NOT NULL,
ACID					NUMERIC(9,3)	NOT NULL,
ALCAL					NUMERIC(9,3)	NOT NULL,
FOREIGN KEY (ID_ESTADO) REFERENCES TRN_LKP_ESTADO_ALIMENTOS (ID_ESTADO_ALIMENTO),
FOREIGN KEY (ID_JERARQUIA) REFERENCES TRN_LKP_TIPO_ALIMENTOS (ID_TIPO_ALIMENTO)
);
/*TRN_LKP_ALIMENTOS_I18N
*/
/*CREATE TABLE TRN_LKP_(
);*/

/*TRN_VW_ESTADO_ALIMENTOS
Descripción: Crear tabla con estados de los alimentos, columna 1 nombre de alimento, columna 2 concatenación de estados separados por ; (Se optimiza la búsqueda)
*/



/*TRN_LKP_
*/
/*CREATE TABLE TRN_LKP_(
);*//*TRN_LKP_
*/
/*CREATE TABLE TRN_LKP_(
);*//*TRN_LKP_
*/
/*CREATE TABLE TRN_LKP_(
);*//*TRN_LKP_
*/
/*CREATE TABLE TRN_LKP_(
);*//*TRN_LKP_
*/
/*CREATE TABLE TRN_LKP_(
);*//*TRN_LKP_
*/
/*CREATE TABLE TRN_LKP_(
);*//*TRN_LKP_
*/
/*CREATE TABLE TRN_LKP_(
);*//*TRN_LKP_
*/
/*CREATE TABLE TRN_LKP_(
);*//*TRN_LKP_
*/
/*CREATE TABLE TRN_LKP_(
);*//*TRN_LKP_
*/
/*CREATE TABLE TRN_LKP_(
);*/

/*TRN_LKP_
*/
/*CREATE TABLE TRN_LKP_(
);*/